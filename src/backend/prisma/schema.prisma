datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum CR_Type {
  DESIGN_ISSUE
  NEW_FUNCTION
  OTHER
  STAGE_GATE
  WP_ACTIVATION
}

enum WBS_El_Status {
  INACTIVE
  ACTIVE
  COMPLETE
}

enum Role {
  ADMIN
  LEADERSHIP
  PROJECT_MANAGER
  PROJECT_LEAD
  MEMBER
  GUEST
}

model User {
  user_id           Int                @id @default(autoincrement())
  first_name        String
  last_name         String
  email_id          String             @unique
  last_login        DateTime
  role              Role
  Fab_Weld_Requests Fab_Weld_Request[]
  Change_Requests   Change_Request[]
  Stage_CR_Reviews  Stage_Gate[]
  WP_Init_Positions WP_Activation[]
  Change            Change[]
  WBS_Element       WBS_Element[]
  Project           Project[]
  WP_Activation     WP_Activation[]    @relation("project_lead")
}

model Fab_Weld_Request {
  fw_id            Int         @id @default(autoincrement())
  date_submitted   DateTime    @default(now())
  part_name        String
  quantity         Int
  resources_needed String
  link             String
  date_completed   DateTime
  requestor        User        @relation(fields: [requestor_id], references: [user_id])
  requestor_id     Int
  wbs_el           WBS_Element @relation(fields: [wbs_el_id], references: [wbs_el_id])
  wbs_el_id        Int
}

model Change_Request {
  cr_id          Int             @id @default(autoincrement())
  date_submitted DateTime        @default(now())
  type           CR_Type
  date_reviewed  DateTime
  accepted       Boolean?
  review_notes   String?
  changes        Change[]
  requestor      User            @relation(fields: [requestor_id], references: [user_id])
  requestor_id   Int
  wbs_el         WBS_Element     @relation(fields: [wbs_el_id], references: [wbs_el_id])
  wbs_el_id      Int
  Scope_CR       Scope_CR[]
  stage_gate     Stage_Gate[]
  wp_init        WP_Activation[]
}

model Scope_CR {
  scope_cr_id     Int            @id
  what            String
  why             String
  timeline_impact Int
  budget_impact   Int
  scope_impact    String
  doc             String
  change_request  Change_Request @relation(fields: [cr_id], references: [cr_id])
  cr_id           Int
}

model Stage_Gate {
  stage_gate_id      Int            @id
  done               Boolean
  leftover_budget    Int
  design_reviewer    User           @relation(fields: [design_reviewer_id], references: [user_id])
  design_reviewer_id Int
  change_request     Change_Request @relation(fields: [cr_id], references: [cr_id])
  cr_id              Int
}

model WP_Activation {
  wp_init_id         Int            @id
  start_date         DateTime
  details_good       Boolean
  project_lead       User           @relation(name: "project_lead", fields: [project_lead_id], references: [user_id])
  project_manager    User           @relation(fields: [project_manager_id], references: [user_id])
  project_lead_id    Int
  project_manager_id Int
  change_request     Change_Request @relation(fields: [cr_id], references: [cr_id])
  cr_id              Int
}

model Change {
  change_id        Int            @id @default(autoincrement())
  attribute        String
  original         String
  new              String
  date_implemented DateTime
  implementor      User           @relation(fields: [implementor_id], references: [user_id])
  implementor_id   Int
  change_request   Change_Request @relation(fields: [cr_id], references: [cr_id])
  cr_id            Int
}

model WBS_Element {
  wbs_el_id         Int                @id @default(autoincrement())
  date_created      DateTime
  wbs_num           String
  wbs_el_name       String
  wbs_el_status     WBS_El_Status
  fab_weld_requests Fab_Weld_Request[]
  change_requests   Change_Request[]
  wbs_el_lead       User               @relation(fields: [wbs_el_lead_id], references: [user_id])
  wbs_el_lead_id    Int
  projects          Project[]
  work_packages     Work_Package[]
}

model Project {
  project_id         Int            @id
  g_drive_folder     String
  slide_deck_link    String
  bom_link           String
  task_list_link     String
  work_packages      Work_Package[]
  project_manager    User           @relation(fields: [project_manager_id], references: [user_id])
  project_manager_id Int
  wbs_el             WBS_Element    @relation(fields: [wbs_el_id], references: [wbs_el_id])
  wbs_el_id          Int
}

model Work_Package {
  wp_id        Int                  @id
  wp_progress  Float
  start_date   DateTime
  duration     Int
  budget       Int
  dependencies String
  deliverables String
  rules        String
  desc_bullets Description_Bullet[]
  project      Project              @relation(fields: [project_id], references: [project_id])
  project_id   Int
  wbs_el       WBS_Element          @relation(fields: [wbs_el_id], references: [wbs_el_id])
  wbs_el_id    Int
}

model Description_Bullet {
  desc_id      Int          @id @default(autoincrement())
  detail       String
  date_added   DateTime
  date_deleted DateTime?
  date_done    DateTime?
  work_package Work_Package @relation(fields: [wp_id], references: [wp_id])
  wp_id        Int
}
